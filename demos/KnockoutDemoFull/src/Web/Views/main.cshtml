<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
    <head>
        <title>Knockout Demo by Byron Sommardahl</title>

        <script src='@Url.Content("~/Scripts/knockout-2.1.0.js")'> </script>
        <script src='@Url.Content("~/Scripts/jquery-1.8.2.min.js")'> </script>
        <script src='@Url.Content("~/Scripts/jquery-ui-1.8.22.min.js")'> </script>        
        <script src='@Url.Content("~/Scripts/bootstrap.min.js")'> </script>
        <script src='@Url.Content("~/Scripts/toastr.js")'> </script>
        <script src='@Url.Content("~/Scripts/ko.extenders.numeric.js")'></script>

        <link href='@Url.Content("~/Content/bootstrap.css")' rel="stylesheet" />
        <link href='@Url.Content("~/Content/jquery-ui-1.8.16.custom.css")' rel="stylesheet" />
        <link href='@Url.Content("~/Content/toastr.css")' rel="stylesheet" />
        <link href='@Url.Content("~/Content/main.css")' rel="stylesheet" />
        
        <script src='@Url.Content("~/ViewModels/productListViewModel.js")'> </script>
        <script src='@Url.Content("~/ViewModels/productViewModel.js")'> </script>
        <script src='@Url.Content("~/ViewModels/editProductViewModel.js")'> </script>
        <script src='@Url.Content("~/ViewModels/loginViewModel.js")'> </script>

    </head>

    <body>
        <div class="navbar navbar-inverse navbar-fixed-top">
            <div class="navbar-inner">
                <div class="container">
                    <a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                    </a>
                    <a class="brand" href="#">Cafe El Gringo</a>
                    <div class="nav-collapse collapse">
                        <ul class="nav">
                            <li class="active"><a href="#">Home</a></li>
                            <li><a href="#about">About</a></li>
                            <li><a href="#contact">Contact</a></li>              
                        </ul>

                        <div class="navbar-form pull-right" id="loginView">
                            <div data-bind="if: !IsLoggedIn()">
                                <input class="span2" type="text" placeholder="Email" data-bind="value: Username"/>
                                <input class="span2" type="password" placeholder="Password" data-bind="value: Password"/>
                                <button type="submit" class="btn" data-bind="click: Login">Sign in</button>
                            </div>
                            <div data-bind="if: IsLoggedIn" class="loggedIn">
                                <p>Welcome <span data-bind="html: Username"></span>! <a href="#" data-bind="click: Logout">Logout</a></p>
                            </div>
                        </div>
                    </div><!--/.nav-collapse -->
                </div>
            </div>
        </div>

        <div class="container" id="productsView">
            
            <div data-bind="if: !IsLoggedIn()">            
                <div class="hero-unit">
                    <h1>Cafe el Gringo</h1>
                    <p>This small application demonstrates the power of the MVVM pattern in javascript using Knockout.JS. 
                        Here, we will see how a simple product control panel could work using Knockout!</p>
                    <p><a href="http://knockoutjs.com/" class="btn btn-primary btn-large">Learn more &raquo;</a></p>
                </div>                        
            </div>

            <div data-bind="if: IsLoggedIn">
                <div id="cashStats">
                    <div>
                        <label class="small-label">Venta:</label>
                        L<span data-bind="html: TotalCredit"></span>
                    </div>    
                    <div>
                        <label class="small-label">Ganancia:</label>
                        L<span data-bind="html: TotalProfit"></span>
                    </div>
                    <div>
                        <label class="small-label">Efectivo Disponible:</label>
                        L<span data-bind="html: TotalCash"></span>
                    </div>    
                    <div>
                        <label class="small-label">Inversion:</label>
                        L<span data-bind="html: TotalDebit"></span>
                    </div>    
                    
                </div>
            
                <h3><span data-bind="html: ProductCount"></span> Products</h3>            
                
                <!-- Example row of columns -->
                <div class="row" data-bind="foreach: Products">
                    <div class="span4">
                        <h2 data-bind="html: Name"></h2>
                        <img data-bind="attr: { src : ImageUrl, alt: Name }" class="product-image"/>
                        <div class="row">
                            <div class="span1">
                                <label class="small-label">Price</label>
                                <span data-bind="html: Price"></span>
                                <button class="btn btn-mini btn-warning" data-bind="click: $parent.EditProduct">Edit</button>                        
                            
                            </div>
                            
                            <div class="span1">
                                <label class="small-label">Quantity</label>
                                <span data-bind="html: Quantity"></span>
                                <button class="btn btn-mini" data-bind="click: Buy, enable: CanBuy">Buy</button>                            
                            </div>

                            <div class="span1">
                                <label class="small-label">Sold</label>
                                <span data-bind="html: Sold"></span> 
                                <button class="btn btn-mini" data-bind="click: Sell, enable: CanSell">Sell</button>                                                        
                            </div>
                        </div>                        
                    </div>
                </div>
                
            </div>
            <hr/>

            <footer>
                <p>Copyright &copy; Cafe El Gringo 2012</p>
            </footer>

        </div> <!-- /container -->
        
        

        <script type="text/javascript">

            //this is the code that runs upon page-load
            $(document).ready(function() {
                var isLoggedIn = ko.observable();
                setupLoginView(isLoggedIn);
                setupProductView(isLoggedIn);
            });

            var setupLoginView = function(isLoggedIn) {
                //the domElement is the html dom container to which we will be binding
                var domElement = $("#loginView")[0];

                //the viewModel is what we will be binding to the domElement                                
                var viewModel = new LoginViewModel(isLoggedIn, toastr);

                //finally, combine the two... bind the viewModel to the domElement
                ko.applyBindings(viewModel, domElement);
            };

            var setupProductView = function(isLoggedIn) {
                //the domElement is the html dom container to which we will be binding
                var domElement = $("#productsView")[0];

                //the viewModel is what we will be binding to the domElement                                
                var viewModel = new ProductsListViewModel(isLoggedIn, toastr);

                //finally, combine the two... bind the viewModel to the domElement
                ko.applyBindings(viewModel, domElement);

                //open up a dialog upon login to display cash stats
                isLoggedIn.subscribe(function() {
                    if (isLoggedIn()) {
                        var dialogWidth = 70;
                        var dialogHeight = 270;
                        var x = window.screen.availWidth - dialogWidth;
                        var y = window.screen.availHeight - dialogHeight;

                        $("#cashStats").dialog({ sticky: true, title: "Cash Stats", dialogClass: "flora", height: dialogHeight, width: dialogWidth })
                            .dialog('option', 'position', [x, y]);

                        $('.flora.ui-dialog').css({ position: "fixed" });
                    }
                });
            };
        </script>
    </body>
</html>